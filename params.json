{
  "name": "Ire-setexpansion",
  "tagline": "",
  "body": "# **Set- Expansion**\r\n                      Contributors : Sonam Gupta , Rajat Singh , Apaar Garg\r\n\r\nThe type of information present on the Internet is very very diverse and keeps growing everyday. Therefore, methods need to be developed which can interpret and use this information to produce something meaningful.\r\n\r\nSet expansion is the task of expanding a set of “seed terms” into a more complete set having entities of the same type. It can also be seen as a task of finding all entities present in a set given only a few entities of the set. The purpose here is to propose a framework for performing the task of set expansion.\r\n\r\n## **What's out there already**\r\n\r\nThere has been a lot of research work being done in this field of a Named Entity Extraction. Following are some systems which perform set expansion:\r\n\r\nGoogle Sets: It is one of the most famous and easy to use Set-expansion tools. It takes as input three or more related seed terms and outputs members of the set these terms are present in. It has been used extensively in other related research work.\r\n\r\nSet Expander for Any Language(SEAL): This system takes advantage of the structuring inside a web page to find out the expanded set terms and has its own ranking algorithm. It can be used for any language unlike the Google sets, which can be used only for English queries.\r\n\r\nKnowItAll System: This system uses textual patterns to extract patterns from the web and then ranks it in a bootstrapping manner using statistical information gathered from the search engine.\r\n\r\n\r\n## **Brief Tour on working of model**\r\nThe aim here is to find related words given a few words of the set as input. To perform this task, we have used the Set Expander for Any Language( SEAL) architecture to expand the seed set and then rank the entities in the expanded set using word2vec model and build our ranking algorithm on top of it.\r\nWe are showing an example of how it accepts initial seed terms and outputs the expanded set of entity lists.\r\n\r\nExample :<br>\r\n            input : mango , apple , banana <br>\r\n            number of results : 8                                                                     \r\n            \r\n            output :\r\n                      chikoo\r\n                      pineapple\r\n                      orange\r\n                      pomegranate\r\n                      grapes\r\n                      watermelon\r\n                      papaya\r\n                      strawberry \r\n\r\n## **Going forward**\r\nThe code is all available on Git hub under MIT License and anyone is welcome try it out (please prefer Ubuntu).\r\nAnd if you're feeling extra adventurous, we warmly welcome pull requests for new features or bug fixes. The code base is Java. The project is in fairly early stages and the code is not among the nicest we've produced, but we have tried our best to execute it in a proper way.\r\n\r\n## **Links**\r\nIf anyone wants to explore more, here are some of the links which will help you gain more knowledge\r\n* YouTube :\r\n* SlideShare :\r\n* DropBox :\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}